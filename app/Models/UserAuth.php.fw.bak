<?php

namespace App\Models;

use Kaltura\Client\Configuration as KalturaConfiguration;
use Kaltura\Client\Client as KalturaClient;
use Kaltura\Client\Enum\SessionType as KalturaSessionType;
use Kaltura\Client\ApiException;
use Kaltura\Client\ClientException;
use Illuminate\Support\Facades\Request;
use Log;

class UserAuth {

    protected $ks;
    protected $adminPartnerId = -2;
    protected $adminAPISecretKey = '393dbe2d06fac9b9b7f3acbef7d58098';
    protected $user = '';
    protected $uiconf = '6711661';

    function __construct() {
//        $config = new KalturaConfiguration($this->adminPartnerId);
//        $config->serviceUrl = 'http://meddev2/';
//        $client = new KalturaClient($config);
//        $this->ks = $client->generateSessionV2($this->adminAPISecretKey, $this->user, KalturaSessionType::ADMIN, $this->adminPartnerId, 86400, '');
    }

    public function getUserById($pid) {
        try {
            $user = array();
            $ks = $this->impersonate($pid);
            $config = new KalturaConfiguration($pid);
            $config->serviceUrl = 'http://meddev2/';
            $client = new KalturaClient($config);
            $client->setKs($ks);
            $result = (array) $client->partner->get($pid);
            $pid = $result['id'];
            $user = array(
                'id' => $result['id'],
                'displayName' => $result['name'],
                'email' => $result['adminEmail'],
                'ks' => $ks
            );
            return $user;
        } catch (Exception $e) {
            Log::error($e);
            return null;
        }
    }

    public function loginUser($credentials) {
        $pid = 0;
        try {
            $config = new KalturaConfiguration($pid);
            $config->serviceUrl = 'http://meddev2/';
            $client = new KalturaClient($config);
            $session = $client->user->loginByLoginId($credentials['username'], $credentials['password']);
        } catch (Exception $e) {
            Log::error($e);
            $session = $e;
        }

        if (isset($session) && !empty($session)) {
            $response = explode("'", $session);
            if (!isset($response[1])) {
                $user = array();
                $config = new KalturaConfiguration($pid);
                $config->serviceUrl = 'http://meddev2/';
                $client = new KalturaClient($config);
                $client->setKs($session);
                $client->startMultiRequest();
                $results1 = $client->user->get($credentials['username']);
                $role_id = "{1:result:roleIds}";
                $client->userRole->get($role_id);
                $results = $client->doMultiRequest();
                $partnerId = (int) $results[0]->partnerId;
                $roleId = (int) $results[0]->roleIds;
                $role_name = $results[1]->name;
                $permissions = $results[1]->permissionNames;
                $screenName = $results[0]->fullName;
                $firstName = $results[0]->firstName;
                $lastName = $results[0]->lastName;
                $email = $results[0]->email;
                $userId = $results[0]->id;

                $ks = $this->impersonate($results[0]->partnerId);
                $config = new KalturaConfiguration($results[0]->partnerId);
                $config->serviceUrl = 'http://meddev2/';
                $client = new KalturaClient($config);
                $client->setKs($ks);
                $partner_result = $client->partner->get($results[0]->partnerId);
                $pubName = $partner_result->name;
                $phone = $partner_result->phone;
                $website = $partner_result->website;
                $partnerParentId = $partner_result->partnerParentId;

                $url = 'http://10.5.25.17/index.php/api/accounts/pid/' . $partnerId . '.json';
                $url2 = 'http://10.5.25.17/index.php/api/accounts/limits/' . $partnerId . '.json';
                $result = $this->curl_request($url);
                $result2 = $this->curl_request($url2);
                $reseller = 0;
                $video_chat = 0;
                $streaming_mobile = 1;
                $transcoding_live = 1;
                $transcoding_vod = 1;
                $transcoding_vod_raw = 1;
                $pay_per_view = 0;
                $membership = 1;
                $white_label = 1;
                $force_parent_layout = 0;
                $use_custom_layout = 0;
                $vr_account = 0;
                $social_network = 0;
                $channel_manager = 1;

                $host = Request::getHost();

                // Set session vars to cookie
                if (strpos($_SERVER['HTTP_USER_AGENT'], "Tricaster") !== false) {
                    $tricaster = 1;
                } else {
                    $tricaster = 0;
                }

                $user = array(
                    'ks' => $session,
                    'userName' => $credentials['username'],
                    'id' => $partnerId,
                    'roleId' => $roleId,
                    'roleName' => $role_name,
                    'fullName' => $screenName,
                    'firstName' => $firstName,
                    'lastName' => $lastName,
                    'pubName' => $pubName,
                    'phone' => $phone,
                    'website' => $website,
                    'rs' => $reseller,
                    'vc' => $video_chat,
                    'mb' => $streaming_mobile,
                    'trans_live' => $transcoding_live,
                    'trans_vod' => $transcoding_vod,
                    'trans_vod_raw' => $transcoding_vod_raw,
                    'ppv' => $pay_per_view,
                    'membership' => $membership,
                    'wl' => $white_label,
                    'fpl' => $force_parent_layout,
                    'cl' => $use_custom_layout,
                    'sn' => $social_network,
                    'cm' => $channel_manager,
                    'tricaster' => $tricaster,
                    'permissions' => $permissions,
                    'partnerParentId' => $partnerParentId
                );

                if ($partnerParentId == 0 || $partnerParentId == null) {
                    if ($white_label == 1) {
                        $url = 'http://10.5.25.17/index.php/api/accounts/wl/' . $partnerId . '.json';
                        $result = $this->curl_request($url);
                        if (!isset($result->error)) {
                            $layout_top_settings = (int) $result[0]->layout_top_settings;
                            $top_nav_bgcolor = $result[0]->top_nav_bgcolor;
                            $top_nav_fontcolor = $result[0]->top_nav_fontcolor;
                            $layout_logo_image = (int) $result[0]->layout_logo_image;
                            $layout_logoid = $result[0]->layout_logoid;
                            $layout_logo_text = (int) $result[0]->layout_logo_text;
                            $logo_font_size = (int) $result[0]->logo_font_size;
                            $layout_side_settings = (int) $result[0]->layout_side_settings;
                            $side_nav_bgcolor = $result[0]->side_nav_bgcolor;
                            $side_nav_fontcolor = $result[0]->side_nav_fontcolor;
                            $side_nav_sub_bgcolor = $result[0]->side_nav_sub_bgcolor;
                            $side_nav_sub_fontcolor = $result[0]->side_nav_sub_fontcolor;

                            $wl_config = array(
                                'layout_top_settings' => $layout_top_settings,
                                'top_nav_bgcolor' => $top_nav_bgcolor,
                                'top_nav_fontcolor' => $top_nav_fontcolor,
                                'layout_logo_image' => $layout_logo_image,
                                'layout_logoid' => $layout_logoid,
                                'layout_logo_text' => $layout_logo_text,
                                'logo_font_size' => $logo_font_size,
                                'layout_side_settings' => $layout_side_settings,
                                'side_nav_bgcolor' => $side_nav_bgcolor,
                                'side_nav_fontcolor' => $side_nav_fontcolor,
                                'side_nav_sub_bgcolor' => $side_nav_sub_bgcolor,
                                'side_nav_sub_fontcolor' => $side_nav_sub_fontcolor
                            );

                            $user['wl_config'] = $wl_config;
                        }
                    }
                    $user['child'] = 0;
                } else {
                    if ($force_parent_layout == 1 && $white_label == 0) {
                        $url = 'http://10.5.25.17/index.php/api/accounts/wl/' . $partnerParentId . '.json';
                        $result = $this->curl_request($url);
                        if (!isset($result->error)) {
                            $layout_top_settings = (int) $result[0]->layout_top_settings;
                            $top_nav_bgcolor = $result[0]->top_nav_bgcolor;
                            $top_nav_fontcolor = $result[0]->top_nav_fontcolor;
                            $layout_logo_image = (int) $result[0]->layout_logo_image;
                            $layout_logoid = $result[0]->layout_logoid;
                            $layout_logo_text = (int) $result[0]->layout_logo_text;
                            $logo_font_size = (int) $result[0]->logo_font_size;
                            $layout_side_settings = (int) $result[0]->layout_side_settings;
                            $side_nav_bgcolor = $result[0]->side_nav_bgcolor;
                            $side_nav_fontcolor = $result[0]->side_nav_fontcolor;
                            $side_nav_sub_bgcolor = $result[0]->side_nav_sub_bgcolor;
                            $side_nav_sub_fontcolor = $result[0]->side_nav_sub_fontcolor;

                            $wl_config = array(
                                'layout_top_settings' => $layout_top_settings,
                                'top_nav_bgcolor' => $top_nav_bgcolor,
                                'top_nav_fontcolor' => $top_nav_fontcolor,
                                'layout_logo_image' => $layout_logo_image,
                                'layout_logoid' => $layout_logoid,
                                'layout_logo_text' => $layout_logo_text,
                                'logo_font_size' => $logo_font_size,
                                'layout_side_settings' => $layout_side_settings,
                                'side_nav_bgcolor' => $side_nav_bgcolor,
                                'side_nav_fontcolor' => $side_nav_fontcolor,
                                'side_nav_sub_bgcolor' => $side_nav_sub_bgcolor,
                                'side_nav_sub_fontcolor' => $side_nav_sub_fontcolor
                            );

                            $user['wl_config'] = $wl_config;
                        }
                        $ks = $this->impersonate($partnerParentId);
                        $config = new KalturaConfiguration($partnerParentId);
                        $config->serviceUrl = 'http://meddev2/';
                        $client = new KalturaClient($config);
                        $client->setKs($ks);
                        $result = $client->partner->get($partnerParentId);
                        $parent_pubName = $result->name;
                        $user['parent_pubName'] = $parent_pubName;
                    } else if ($force_parent_layout == 0 && $white_label == 1) {
                        $url = 'http://10.5.25.17/index.php/api/accounts/wl/' . $partnerId . '.json';
                        $result = $this->curl_request($url);
                        if (!isset($result->error)) {
                            $layout_top_settings = (int) $result[0]->layout_top_settings;
                            $top_nav_bgcolor = $result[0]->top_nav_bgcolor;
                            $top_nav_fontcolor = $result[0]->top_nav_fontcolor;
                            $layout_logo_image = (int) $result[0]->layout_logo_image;
                            $layout_logoid = $result[0]->layout_logoid;
                            $layout_logo_text = (int) $result[0]->layout_logo_text;
                            $logo_font_size = (int) $result[0]->logo_font_size;
                            $layout_side_settings = (int) $result[0]->layout_side_settings;
                            $side_nav_bgcolor = $result[0]->side_nav_bgcolor;
                            $side_nav_fontcolor = $result[0]->side_nav_fontcolor;
                            $side_nav_sub_bgcolor = $result[0]->side_nav_sub_bgcolor;
                            $side_nav_sub_fontcolor = $result[0]->side_nav_sub_fontcolor;

                            $wl_config = array(
                                'layout_top_settings' => $layout_top_settings,
                                'top_nav_bgcolor' => $top_nav_bgcolor,
                                'top_nav_fontcolor' => $top_nav_fontcolor,
                                'layout_logo_image' => $layout_logo_image,
                                'layout_logoid' => $layout_logoid,
                                'layout_logo_text' => $layout_logo_text,
                                'logo_font_size' => $logo_font_size,
                                'layout_side_settings' => $layout_side_settings,
                                'side_nav_bgcolor' => $side_nav_bgcolor,
                                'side_nav_fontcolor' => $side_nav_fontcolor,
                                'side_nav_sub_bgcolor' => $side_nav_sub_bgcolor,
                                'side_nav_sub_fontcolor' => $side_nav_sub_fontcolor
                            );

                            $user['wl_config'] = $wl_config;
                        }
                    } else if ($use_custom_layout == 1 && $white_label == 0) {
                        $url = 'http://10.5.25.17/index.php/api/accounts/wl/' . $partnerId . '.json';
                        $result = $this->curl_request($url);
                        if (!isset($result->error)) {
                            $layout_top_settings = (int) $result[0]->layout_top_settings;
                            $top_nav_bgcolor = $result[0]->top_nav_bgcolor;
                            $top_nav_fontcolor = $result[0]->top_nav_fontcolor;
                            $layout_logo_image = (int) $result[0]->layout_logo_image;
                            $layout_logoid = $result[0]->layout_logoid;
                            $layout_logo_text = (int) $result[0]->layout_logo_text;
                            $logo_font_size = (int) $result[0]->logo_font_size;
                            $layout_side_settings = (int) $result[0]->layout_side_settings;
                            $side_nav_bgcolor = $result[0]->side_nav_bgcolor;
                            $side_nav_fontcolor = $result[0]->side_nav_fontcolor;
                            $side_nav_sub_bgcolor = $result[0]->side_nav_sub_bgcolor;
                            $side_nav_sub_fontcolor = $result[0]->side_nav_sub_fontcolor;

                            $wl_config = array(
                                'layout_top_settings' => $layout_top_settings,
                                'top_nav_bgcolor' => $top_nav_bgcolor,
                                'top_nav_fontcolor' => $top_nav_fontcolor,
                                'layout_logo_image' => $layout_logo_image,
                                'layout_logoid' => $layout_logoid,
                                'layout_logo_text' => $layout_logo_text,
                                'logo_font_size' => $logo_font_size,
                                'layout_side_settings' => $layout_side_settings,
                                'side_nav_bgcolor' => $side_nav_bgcolor,
                                'side_nav_fontcolor' => $side_nav_fontcolor,
                                'side_nav_sub_bgcolor' => $side_nav_sub_bgcolor,
                                'side_nav_sub_fontcolor' => $side_nav_sub_fontcolor
                            );

                            $user['wl_config'] = $wl_config;
                        }
                    }
                    $user['child'] = 1;
                }

                $expire = time() + 60 * 60 * 24 * 1;
                setcookie("kmcks", $session, $expire, '/', 'devplatform.streamingmediahosting.com', false);
                setcookie("email", $email, $expire, '/', 'devplatform.streamingmediahosting.com', false);
                setcookie("pid", $partnerId, $expire, '/', 'devplatform.streamingmediahosting.com', false);
                setcookie("uid", $userId, $expire, '/', 'devplatform.streamingmediahosting.com', false);

                return $user;
            } else {
                return null;
            }
        } else {
            return null;
        }
    }

    public function impersonate($pid) {
        $config = new KalturaConfiguration($pid);
        $config->serviceUrl = 'http://meddev2/';
        $client = new KalturaClient($config);
        $secret = $this->adminAPISecretKey;
        $impersonatedPartnerId = $pid;
        $userId = null;
        $type = KalturaSessionType::ADMIN;
        $partnerId = $this->adminPartnerId;
        $expiry = null;
        $privileges = null;
        $result = $client->session->impersonate($secret, $impersonatedPartnerId, $userId, $type, $partnerId, $expiry, $privileges);
        return $result;
    }

    public function curl_request($url) {
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_HEADER, FALSE);
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, TRUE);
        curl_setopt($ch, CURLOPT_AUTOREFERER, TRUE);
        $result = curl_exec($ch);
        $result = json_decode($result);
        curl_close($ch);
        return $result;
    }

}
